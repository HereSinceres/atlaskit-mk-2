// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Using enzyme Breadcrumbs snapshot should be same with data-testid 1`] = `
a.emotion-2 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  border-width: 0;
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: inherit;
  font-style: normal;
  font-weight: normal;
  max-width: 100%;
  outline: none !important;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  background: none;
  border-radius: 3px;
  box-shadow: 0 0 0 2px inherit;
  color: #6B778C !important;
  cursor: default;
  height: auto;
  line-height: inherit;
  padding: 0;
  -webkit-transition: background 0.1s ease-out,box-shadow 0.15s cubic-bezier(0.47,0.03,0.49,1.38);
  transition: background 0.1s ease-out,box-shadow 0.15s cubic-bezier(0.47,0.03,0.49,1.38);
  -webkit-transition-duration: 0.1s,0.15s;
  transition-duration: 0.1s,0.15s;
  vertical-align: baseline;
  width: auto;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  min-width: 0;
}

a.emotion-2::-moz-focus-inner {
  border: 0;
  margin: 0;
  padding: 0;
}

a.emotion-2:hover {
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.emotion-1 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  max-width: 100%;
  position: relative;
}

.emotion-0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  margin: 0;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 1;
}

.emotion-5 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  border-width: 0;
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: inherit;
  font-style: normal;
  font-weight: normal;
  max-width: 100%;
  outline: none !important;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  background: none;
  border-radius: 3px;
  box-shadow: 0 0 0 2px inherit;
  color: #6B778C !important;
  cursor: default;
  height: auto;
  line-height: inherit;
  padding: 0;
  -webkit-transition: background 0.1s ease-out,box-shadow 0.15s cubic-bezier(0.47,0.03,0.49,1.38);
  transition: background 0.1s ease-out,box-shadow 0.15s cubic-bezier(0.47,0.03,0.49,1.38);
  -webkit-transition-duration: 0.1s,0.15s;
  transition-duration: 0.1s,0.15s;
  vertical-align: baseline;
  width: auto;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  min-width: 0;
}

.emotion-5::-moz-focus-inner {
  border: 0;
  margin: 0;
  padding: 0;
}

.emotion-5:hover {
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  height: 1.7142857142857142em;
  line-height: 1.7142857142857142em;
  padding: 0;
  box-sizing: border-box;
  max-width: 100%;
}

.c2 {
  color: #7A869A;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 8px;
  text-align: center;
  width: 8px;
}

.c0 {
  color: #5E6C84;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

<Breadcrumbs
  maxItems={5}
  testId="set-of-breadcrumbs"
>
  <WithAnalyticsContext(WithAnalyticsEvents(BreadcrumbsStateless))
    isExpanded={false}
    maxItems={5}
    onExpand={[Function]}
    testId="set-of-breadcrumbs"
  >
    <AnalyticsContext
      data={
        Object {
          "componentName": "breadcrumbs",
          "packageName": "@atlaskit/breadcrumbs",
          "packageVersion": "999.9.9",
        }
      }
    >
      <WithAnalyticsEvents(BreadcrumbsStateless)
        isExpanded={false}
        maxItems={5}
        onExpand={[Function]}
        testId="set-of-breadcrumbs"
      >
        <AnalyticsContextConsumer
          createEventMap={
            Object {
              "onExpand": [Function],
            }
          }
          wrappedComponentProps={
            Object {
              "children": Array [
                <ForwardRef
                  href="/item"
                  text="Item"
                />,
                <ForwardRef
                  href="/item"
                  testId="breadcrumb-to-find"
                  text="Another item"
                />,
                <ForwardRef
                  href="/item"
                  text="A third item"
                />,
                <ForwardRef
                  href="/item"
                  text="A fourth item with a very long name"
                />,
                <ForwardRef
                  href="/item"
                  text="Item 5"
                />,
                <ForwardRef
                  href="/item"
                  testId="last-breadcrumb"
                  text="A sixth item"
                />,
              ],
              "isExpanded": false,
              "maxItems": 5,
              "onExpand": [Function],
              "testId": "set-of-breadcrumbs",
            }
          }
        >
          <BreadcrumbsStateless
            createAnalyticsEvent={[Function]}
            isExpanded={false}
            itemsAfterCollapse={1}
            itemsBeforeCollapse={1}
            maxItems={5}
            onExpand={[Function]}
            testId="set-of-breadcrumbs"
          >
            <BreadcrumbsContainer
              data-testid="set-of-breadcrumbs"
            >
              <div
                className="c0"
                data-testid="set-of-breadcrumbs"
              >
                <WithAnalyticsEvents(BreadcrumbsItem)
                  hasSeparator={true}
                  href="/item"
                  key=".0"
                  text="Item"
                >
                  <AnalyticsContextConsumer
                    createEventMap={
                      Object {
                        "onClick": [Function],
                      }
                    }
                    wrappedComponentProps={
                      Object {
                        "hasSeparator": true,
                        "href": "/item",
                        "text": "Item",
                      }
                    }
                  >
                    <BreadcrumbsItem
                      createAnalyticsEvent={[Function]}
                      hasSeparator={true}
                      href="/item"
                      onClick={[Function]}
                      text="Item"
                      truncationWidth={0}
                    >
                      <BreadcrumbsItemElement>
                        <div
                          className="c1"
                        >
                          <ForwardRef
                            analyticsContext={
                              Object {
                                "componentName": "breadcrumbsItem",
                                "packageName": "@atlaskit/breadcrumbs",
                                "packageVersion": "999.9.9",
                              }
                            }
                            appearance="subtle-link"
                            href="/item"
                            onClick={[Function]}
                            spacing="none"
                            truncationWidth={0}
                          >
                            <WithAnalyticsContext(WithAnalyticsEvents(Button))
                              analyticsContext={
                                Object {
                                  "componentName": "breadcrumbsItem",
                                  "packageName": "@atlaskit/breadcrumbs",
                                  "packageVersion": "999.9.9",
                                }
                              }
                              appearance="subtle-link"
                              href="/item"
                              onClick={[Function]}
                              spacing="none"
                              theme={[Function]}
                            >
                              <AnalyticsContext
                                data={
                                  Object {
                                    "componentName": "breadcrumbsItem",
                                    "packageName": "@atlaskit/breadcrumbs",
                                    "packageVersion": "999.9.9",
                                  }
                                }
                              >
                                <WithAnalyticsEvents(Button)
                                  appearance="subtle-link"
                                  href="/item"
                                  onClick={[Function]}
                                  spacing="none"
                                  theme={[Function]}
                                >
                                  <AnalyticsContextConsumer
                                    createEventMap={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    wrappedComponentProps={
                                      Object {
                                        "appearance": "subtle-link",
                                        "children": "Item",
                                        "component": undefined,
                                        "href": "/item",
                                        "iconAfter": undefined,
                                        "iconBefore": undefined,
                                        "onClick": [Function],
                                        "spacing": "none",
                                        "target": undefined,
                                        "testId": undefined,
                                        "theme": [Function],
                                      }
                                    }
                                  >
                                    <Button
                                      appearance="subtle-link"
                                      createAnalyticsEvent={[Function]}
                                      href="/item"
                                      onClick={[Function]}
                                      spacing="none"
                                      theme={[Function]}
                                    >
                                      <Button
                                        appearance="subtle-link"
                                        autoFocus={false}
                                        consumerRef={[Function]}
                                        createAnalyticsEvent={[Function]}
                                        href="/item"
                                        isDisabled={false}
                                        isLoading={false}
                                        isSelected={false}
                                        onClick={[Function]}
                                        shouldFitContainer={false}
                                        spacing="none"
                                        theme={[Function]}
                                        type="button"
                                      >
                                        <Provider
                                          value={[Function]}
                                        >
                                          <Consumer>
                                            <Consumer
                                              appearance="subtle-link"
                                              autoFocus={false}
                                              consumerRef={[Function]}
                                              createAnalyticsEvent={[Function]}
                                              href="/item"
                                              iconIsOnlyChild={false}
                                              isDisabled={false}
                                              isLoading={false}
                                              isSelected={false}
                                              mode="light"
                                              onClick={[Function]}
                                              shouldFitContainer={false}
                                              spacing="none"
                                              state="default"
                                              theme={[Function]}
                                              type="button"
                                            >
                                              <a
                                                autoFocus={false}
                                                className="emotion-2"
                                                disabled={false}
                                                href="/item"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                type="button"
                                              >
                                                <Component
                                                  fit={false}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    className="emotion-1"
                                                    onClick={[Function]}
                                                  >
                                                    <Component
                                                      followsIcon={false}
                                                      isLoading={false}
                                                      spacing="none"
                                                    >
                                                      <span
                                                        className="emotion-0"
                                                      >
                                                        Item
                                                      </span>
                                                    </Component>
                                                  </span>
                                                </Component>
                                              </a>
                                            </Consumer>
                                          </Consumer>
                                        </Provider>
                                      </Button>
                                    </Button>
                                  </AnalyticsContextConsumer>
                                </WithAnalyticsEvents(Button)>
                              </AnalyticsContext>
                            </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                          </ForwardRef>
                          <Separator>
                            <div
                              className="c2"
                            >
                              /
                            </div>
                          </Separator>
                        </div>
                      </BreadcrumbsItemElement>
                    </BreadcrumbsItem>
                  </AnalyticsContextConsumer>
                </WithAnalyticsEvents(BreadcrumbsItem)>
                <EllipsisItem
                  hasSeparator={true}
                  key="ellipsis"
                  onClick={[Function]}
                  testId="set-of-breadcrumbs--breadcrumb-ellipsis"
                >
                  <BreadcrumbsItemElement>
                    <div
                      className="c1"
                    >
                      <ForwardRef
                        appearance="subtle-link"
                        onClick={[Function]}
                        spacing="none"
                        testId="set-of-breadcrumbs--breadcrumb-ellipsis"
                      >
                        <WithAnalyticsContext(WithAnalyticsEvents(Button))
                          appearance="subtle-link"
                          onClick={[Function]}
                          spacing="none"
                          testId="set-of-breadcrumbs--breadcrumb-ellipsis"
                          theme={[Function]}
                        >
                          <AnalyticsContext
                            data={
                              Object {
                                "componentName": "button",
                                "packageName": "@atlaskit/button",
                                "packageVersion": "999.9.9",
                              }
                            }
                          >
                            <WithAnalyticsEvents(Button)
                              appearance="subtle-link"
                              onClick={[Function]}
                              spacing="none"
                              testId="set-of-breadcrumbs--breadcrumb-ellipsis"
                              theme={[Function]}
                            >
                              <AnalyticsContextConsumer
                                createEventMap={
                                  Object {
                                    "onClick": [Function],
                                  }
                                }
                                wrappedComponentProps={
                                  Object {
                                    "appearance": "subtle-link",
                                    "children": "…",
                                    "onClick": [Function],
                                    "spacing": "none",
                                    "testId": "set-of-breadcrumbs--breadcrumb-ellipsis",
                                    "theme": [Function],
                                  }
                                }
                              >
                                <Button
                                  appearance="subtle-link"
                                  createAnalyticsEvent={[Function]}
                                  onClick={[Function]}
                                  spacing="none"
                                  testId="set-of-breadcrumbs--breadcrumb-ellipsis"
                                  theme={[Function]}
                                >
                                  <Button
                                    appearance="subtle-link"
                                    autoFocus={false}
                                    consumerRef={null}
                                    createAnalyticsEvent={[Function]}
                                    isDisabled={false}
                                    isLoading={false}
                                    isSelected={false}
                                    onClick={[Function]}
                                    shouldFitContainer={false}
                                    spacing="none"
                                    testId="set-of-breadcrumbs--breadcrumb-ellipsis"
                                    theme={[Function]}
                                    type="button"
                                  >
                                    <Provider
                                      value={[Function]}
                                    >
                                      <Consumer>
                                        <Consumer
                                          appearance="subtle-link"
                                          autoFocus={false}
                                          consumerRef={null}
                                          createAnalyticsEvent={[Function]}
                                          iconIsOnlyChild={false}
                                          isDisabled={false}
                                          isLoading={false}
                                          isSelected={false}
                                          mode="light"
                                          onClick={[Function]}
                                          shouldFitContainer={false}
                                          spacing="none"
                                          state="default"
                                          testId="set-of-breadcrumbs--breadcrumb-ellipsis"
                                          theme={[Function]}
                                          type="button"
                                        >
                                          <button
                                            autoFocus={false}
                                            className="emotion-5"
                                            data-testid="set-of-breadcrumbs--breadcrumb-ellipsis"
                                            disabled={false}
                                            onBlur={[Function]}
                                            onClick={[Function]}
                                            onFocus={[Function]}
                                            onMouseDown={[Function]}
                                            onMouseEnter={[Function]}
                                            onMouseLeave={[Function]}
                                            onMouseUp={[Function]}
                                            type="button"
                                          >
                                            <Component
                                              fit={false}
                                              onClick={[Function]}
                                            >
                                              <span
                                                className="emotion-1"
                                                onClick={[Function]}
                                              >
                                                <Component
                                                  followsIcon={false}
                                                  isLoading={false}
                                                  spacing="none"
                                                >
                                                  <span
                                                    className="emotion-0"
                                                  >
                                                    …
                                                  </span>
                                                </Component>
                                              </span>
                                            </Component>
                                          </button>
                                        </Consumer>
                                      </Consumer>
                                    </Provider>
                                  </Button>
                                </Button>
                              </AnalyticsContextConsumer>
                            </WithAnalyticsEvents(Button)>
                          </AnalyticsContext>
                        </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                      </ForwardRef>
                      <Separator>
                        <div
                          className="c2"
                        >
                          /
                        </div>
                      </Separator>
                    </div>
                  </BreadcrumbsItemElement>
                </EllipsisItem>
                <WithAnalyticsEvents(BreadcrumbsItem)
                  hasSeparator={false}
                  href="/item"
                  key=".5"
                  testId="last-breadcrumb"
                  text="A sixth item"
                >
                  <AnalyticsContextConsumer
                    createEventMap={
                      Object {
                        "onClick": [Function],
                      }
                    }
                    wrappedComponentProps={
                      Object {
                        "hasSeparator": false,
                        "href": "/item",
                        "testId": "last-breadcrumb",
                        "text": "A sixth item",
                      }
                    }
                  >
                    <BreadcrumbsItem
                      createAnalyticsEvent={[Function]}
                      hasSeparator={false}
                      href="/item"
                      onClick={[Function]}
                      testId="last-breadcrumb"
                      text="A sixth item"
                      truncationWidth={0}
                    >
                      <BreadcrumbsItemElement>
                        <div
                          className="c1"
                        >
                          <ForwardRef
                            analyticsContext={
                              Object {
                                "componentName": "breadcrumbsItem",
                                "packageName": "@atlaskit/breadcrumbs",
                                "packageVersion": "999.9.9",
                              }
                            }
                            appearance="subtle-link"
                            href="/item"
                            onClick={[Function]}
                            spacing="none"
                            testId="last-breadcrumb"
                            truncationWidth={0}
                          >
                            <WithAnalyticsContext(WithAnalyticsEvents(Button))
                              analyticsContext={
                                Object {
                                  "componentName": "breadcrumbsItem",
                                  "packageName": "@atlaskit/breadcrumbs",
                                  "packageVersion": "999.9.9",
                                }
                              }
                              appearance="subtle-link"
                              href="/item"
                              onClick={[Function]}
                              spacing="none"
                              testId="last-breadcrumb"
                              theme={[Function]}
                            >
                              <AnalyticsContext
                                data={
                                  Object {
                                    "componentName": "breadcrumbsItem",
                                    "packageName": "@atlaskit/breadcrumbs",
                                    "packageVersion": "999.9.9",
                                  }
                                }
                              >
                                <WithAnalyticsEvents(Button)
                                  appearance="subtle-link"
                                  href="/item"
                                  onClick={[Function]}
                                  spacing="none"
                                  testId="last-breadcrumb"
                                  theme={[Function]}
                                >
                                  <AnalyticsContextConsumer
                                    createEventMap={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    wrappedComponentProps={
                                      Object {
                                        "appearance": "subtle-link",
                                        "children": "A sixth item",
                                        "component": undefined,
                                        "href": "/item",
                                        "iconAfter": undefined,
                                        "iconBefore": undefined,
                                        "onClick": [Function],
                                        "spacing": "none",
                                        "target": undefined,
                                        "testId": "last-breadcrumb",
                                        "theme": [Function],
                                      }
                                    }
                                  >
                                    <Button
                                      appearance="subtle-link"
                                      createAnalyticsEvent={[Function]}
                                      href="/item"
                                      onClick={[Function]}
                                      spacing="none"
                                      testId="last-breadcrumb"
                                      theme={[Function]}
                                    >
                                      <Button
                                        appearance="subtle-link"
                                        autoFocus={false}
                                        consumerRef={[Function]}
                                        createAnalyticsEvent={[Function]}
                                        href="/item"
                                        isDisabled={false}
                                        isLoading={false}
                                        isSelected={false}
                                        onClick={[Function]}
                                        shouldFitContainer={false}
                                        spacing="none"
                                        testId="last-breadcrumb"
                                        theme={[Function]}
                                        type="button"
                                      >
                                        <Provider
                                          value={[Function]}
                                        >
                                          <Consumer>
                                            <Consumer
                                              appearance="subtle-link"
                                              autoFocus={false}
                                              consumerRef={[Function]}
                                              createAnalyticsEvent={[Function]}
                                              href="/item"
                                              iconIsOnlyChild={false}
                                              isDisabled={false}
                                              isLoading={false}
                                              isSelected={false}
                                              mode="light"
                                              onClick={[Function]}
                                              shouldFitContainer={false}
                                              spacing="none"
                                              state="default"
                                              testId="last-breadcrumb"
                                              theme={[Function]}
                                              type="button"
                                            >
                                              <a
                                                autoFocus={false}
                                                className="emotion-2"
                                                data-testid="last-breadcrumb"
                                                disabled={false}
                                                href="/item"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                type="button"
                                              >
                                                <Component
                                                  fit={false}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    className="emotion-1"
                                                    onClick={[Function]}
                                                  >
                                                    <Component
                                                      followsIcon={false}
                                                      isLoading={false}
                                                      spacing="none"
                                                    >
                                                      <span
                                                        className="emotion-0"
                                                      >
                                                        A sixth item
                                                      </span>
                                                    </Component>
                                                  </span>
                                                </Component>
                                              </a>
                                            </Consumer>
                                          </Consumer>
                                        </Provider>
                                      </Button>
                                    </Button>
                                  </AnalyticsContextConsumer>
                                </WithAnalyticsEvents(Button)>
                              </AnalyticsContext>
                            </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                          </ForwardRef>
                        </div>
                      </BreadcrumbsItemElement>
                    </BreadcrumbsItem>
                  </AnalyticsContextConsumer>
                </WithAnalyticsEvents(BreadcrumbsItem)>
              </div>
            </BreadcrumbsContainer>
          </BreadcrumbsStateless>
        </AnalyticsContextConsumer>
      </WithAnalyticsEvents(BreadcrumbsStateless)>
    </AnalyticsContext>
  </WithAnalyticsContext(WithAnalyticsEvents(BreadcrumbsStateless))>
</Breadcrumbs>
`;

exports[`Using enzyme Breadcrumbs snapshot should be same with data-testid 2`] = `
a.emotion-2 {
  -webkit-align-items: baseline;
  -webkit-box-align: baseline;
  -ms-flex-align: baseline;
  align-items: baseline;
  border-width: 0;
  box-sizing: border-box;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  font-size: inherit;
  font-style: normal;
  font-weight: normal;
  max-width: 100%;
  outline: none !important;
  text-align: center;
  -webkit-text-decoration: none;
  text-decoration: none;
  white-space: nowrap;
  background: none;
  border-radius: 3px;
  box-shadow: 0 0 0 2px inherit;
  color: #6B778C !important;
  cursor: default;
  height: auto;
  line-height: inherit;
  padding: 0;
  -webkit-transition: background 0.1s ease-out,box-shadow 0.15s cubic-bezier(0.47,0.03,0.49,1.38);
  transition: background 0.1s ease-out,box-shadow 0.15s cubic-bezier(0.47,0.03,0.49,1.38);
  -webkit-transition-duration: 0.1s,0.15s;
  transition-duration: 0.1s,0.15s;
  vertical-align: baseline;
  width: auto;
  -webkit-flex-shrink: 1;
  -ms-flex-negative: 1;
  flex-shrink: 1;
  min-width: 0;
}

a.emotion-2::-moz-focus-inner {
  border: 0;
  margin: 0;
  padding: 0;
}

a.emotion-2:hover {
  -webkit-text-decoration: inherit;
  text-decoration: inherit;
}

.emotion-1 {
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  display: -webkit-inline-box;
  display: -webkit-inline-flex;
  display: -ms-inline-flexbox;
  display: inline-flex;
  -webkit-flex-wrap: nowrap;
  -ms-flex-wrap: nowrap;
  flex-wrap: nowrap;
  max-width: 100%;
  position: relative;
}

.emotion-0 {
  -webkit-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  -webkit-align-self: center;
  -ms-flex-item-align: center;
  align-self: center;
  -webkit-flex: 1 1 auto;
  -ms-flex: 1 1 auto;
  flex: 1 1 auto;
  margin: 0;
  max-width: 100%;
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
  -webkit-transition: opacity 0.3s;
  transition: opacity 0.3s;
  opacity: 1;
}

.c1 {
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-direction: row;
  -ms-flex-direction: row;
  flex-direction: row;
  height: 1.7142857142857142em;
  line-height: 1.7142857142857142em;
  padding: 0;
  box-sizing: border-box;
  max-width: 100%;
}

.c2 {
  color: #7A869A;
  -webkit-flex-shrink: 0;
  -ms-flex-negative: 0;
  flex-shrink: 0;
  padding: 0 8px;
  text-align: center;
  width: 8px;
}

.c0 {
  color: #5E6C84;
  display: -webkit-box;
  display: -webkit-flex;
  display: -ms-flexbox;
  display: flex;
  -webkit-flex-wrap: wrap;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
}

<Breadcrumbs
  maxItems={5}
  testId="set-of-breadcrumbs"
>
  <WithAnalyticsContext(WithAnalyticsEvents(BreadcrumbsStateless))
    isExpanded={true}
    maxItems={5}
    onExpand={[Function]}
    testId="set-of-breadcrumbs"
  >
    <AnalyticsContext
      data={
        Object {
          "componentName": "breadcrumbs",
          "packageName": "@atlaskit/breadcrumbs",
          "packageVersion": "999.9.9",
        }
      }
    >
      <WithAnalyticsEvents(BreadcrumbsStateless)
        isExpanded={true}
        maxItems={5}
        onExpand={[Function]}
        testId="set-of-breadcrumbs"
      >
        <AnalyticsContextConsumer
          createEventMap={
            Object {
              "onExpand": [Function],
            }
          }
          wrappedComponentProps={
            Object {
              "children": Array [
                <ForwardRef
                  href="/item"
                  text="Item"
                />,
                <ForwardRef
                  href="/item"
                  testId="breadcrumb-to-find"
                  text="Another item"
                />,
                <ForwardRef
                  href="/item"
                  text="A third item"
                />,
                <ForwardRef
                  href="/item"
                  text="A fourth item with a very long name"
                />,
                <ForwardRef
                  href="/item"
                  text="Item 5"
                />,
                <ForwardRef
                  href="/item"
                  testId="last-breadcrumb"
                  text="A sixth item"
                />,
              ],
              "isExpanded": true,
              "maxItems": 5,
              "onExpand": [Function],
              "testId": "set-of-breadcrumbs",
            }
          }
        >
          <BreadcrumbsStateless
            createAnalyticsEvent={[Function]}
            isExpanded={true}
            itemsAfterCollapse={1}
            itemsBeforeCollapse={1}
            maxItems={5}
            onExpand={[Function]}
            testId="set-of-breadcrumbs"
          >
            <BreadcrumbsContainer
              data-testid="set-of-breadcrumbs"
            >
              <div
                className="c0"
                data-testid="set-of-breadcrumbs"
              >
                <WithAnalyticsEvents(BreadcrumbsItem)
                  hasSeparator={true}
                  href="/item"
                  key=".0"
                  text="Item"
                >
                  <AnalyticsContextConsumer
                    createEventMap={
                      Object {
                        "onClick": [Function],
                      }
                    }
                    wrappedComponentProps={
                      Object {
                        "hasSeparator": true,
                        "href": "/item",
                        "text": "Item",
                      }
                    }
                  >
                    <BreadcrumbsItem
                      createAnalyticsEvent={[Function]}
                      hasSeparator={true}
                      href="/item"
                      onClick={[Function]}
                      text="Item"
                      truncationWidth={0}
                    >
                      <BreadcrumbsItemElement>
                        <div
                          className="c1"
                        >
                          <ForwardRef
                            analyticsContext={
                              Object {
                                "componentName": "breadcrumbsItem",
                                "packageName": "@atlaskit/breadcrumbs",
                                "packageVersion": "999.9.9",
                              }
                            }
                            appearance="subtle-link"
                            href="/item"
                            onClick={[Function]}
                            spacing="none"
                            truncationWidth={0}
                          >
                            <WithAnalyticsContext(WithAnalyticsEvents(Button))
                              analyticsContext={
                                Object {
                                  "componentName": "breadcrumbsItem",
                                  "packageName": "@atlaskit/breadcrumbs",
                                  "packageVersion": "999.9.9",
                                }
                              }
                              appearance="subtle-link"
                              href="/item"
                              onClick={[Function]}
                              spacing="none"
                              theme={[Function]}
                            >
                              <AnalyticsContext
                                data={
                                  Object {
                                    "componentName": "breadcrumbsItem",
                                    "packageName": "@atlaskit/breadcrumbs",
                                    "packageVersion": "999.9.9",
                                  }
                                }
                              >
                                <WithAnalyticsEvents(Button)
                                  appearance="subtle-link"
                                  href="/item"
                                  onClick={[Function]}
                                  spacing="none"
                                  theme={[Function]}
                                >
                                  <AnalyticsContextConsumer
                                    createEventMap={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    wrappedComponentProps={
                                      Object {
                                        "appearance": "subtle-link",
                                        "children": "Item",
                                        "component": undefined,
                                        "href": "/item",
                                        "iconAfter": undefined,
                                        "iconBefore": undefined,
                                        "onClick": [Function],
                                        "spacing": "none",
                                        "target": undefined,
                                        "testId": undefined,
                                        "theme": [Function],
                                      }
                                    }
                                  >
                                    <Button
                                      appearance="subtle-link"
                                      createAnalyticsEvent={[Function]}
                                      href="/item"
                                      onClick={[Function]}
                                      spacing="none"
                                      theme={[Function]}
                                    >
                                      <Button
                                        appearance="subtle-link"
                                        autoFocus={false}
                                        consumerRef={[Function]}
                                        createAnalyticsEvent={[Function]}
                                        href="/item"
                                        isDisabled={false}
                                        isLoading={false}
                                        isSelected={false}
                                        onClick={[Function]}
                                        shouldFitContainer={false}
                                        spacing="none"
                                        theme={[Function]}
                                        type="button"
                                      >
                                        <Provider
                                          value={[Function]}
                                        >
                                          <Consumer>
                                            <Consumer
                                              appearance="subtle-link"
                                              autoFocus={false}
                                              consumerRef={[Function]}
                                              createAnalyticsEvent={[Function]}
                                              href="/item"
                                              iconIsOnlyChild={false}
                                              isDisabled={false}
                                              isLoading={false}
                                              isSelected={false}
                                              mode="light"
                                              onClick={[Function]}
                                              shouldFitContainer={false}
                                              spacing="none"
                                              state="default"
                                              theme={[Function]}
                                              type="button"
                                            >
                                              <a
                                                autoFocus={false}
                                                className="emotion-2"
                                                disabled={false}
                                                href="/item"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                type="button"
                                              >
                                                <Component
                                                  fit={false}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    className="emotion-1"
                                                    onClick={[Function]}
                                                  >
                                                    <Component
                                                      followsIcon={false}
                                                      isLoading={false}
                                                      spacing="none"
                                                    >
                                                      <span
                                                        className="emotion-0"
                                                      >
                                                        Item
                                                      </span>
                                                    </Component>
                                                  </span>
                                                </Component>
                                              </a>
                                            </Consumer>
                                          </Consumer>
                                        </Provider>
                                      </Button>
                                    </Button>
                                  </AnalyticsContextConsumer>
                                </WithAnalyticsEvents(Button)>
                              </AnalyticsContext>
                            </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                          </ForwardRef>
                          <Separator>
                            <div
                              className="c2"
                            >
                              /
                            </div>
                          </Separator>
                        </div>
                      </BreadcrumbsItemElement>
                    </BreadcrumbsItem>
                  </AnalyticsContextConsumer>
                </WithAnalyticsEvents(BreadcrumbsItem)>
                <WithAnalyticsEvents(BreadcrumbsItem)
                  hasSeparator={true}
                  href="/item"
                  key=".1"
                  testId="breadcrumb-to-find"
                  text="Another item"
                >
                  <AnalyticsContextConsumer
                    createEventMap={
                      Object {
                        "onClick": [Function],
                      }
                    }
                    wrappedComponentProps={
                      Object {
                        "hasSeparator": true,
                        "href": "/item",
                        "testId": "breadcrumb-to-find",
                        "text": "Another item",
                      }
                    }
                  >
                    <BreadcrumbsItem
                      createAnalyticsEvent={[Function]}
                      hasSeparator={true}
                      href="/item"
                      onClick={[Function]}
                      testId="breadcrumb-to-find"
                      text="Another item"
                      truncationWidth={0}
                    >
                      <BreadcrumbsItemElement>
                        <div
                          className="c1"
                        >
                          <ForwardRef
                            analyticsContext={
                              Object {
                                "componentName": "breadcrumbsItem",
                                "packageName": "@atlaskit/breadcrumbs",
                                "packageVersion": "999.9.9",
                              }
                            }
                            appearance="subtle-link"
                            href="/item"
                            onClick={[Function]}
                            spacing="none"
                            testId="breadcrumb-to-find"
                            truncationWidth={0}
                          >
                            <WithAnalyticsContext(WithAnalyticsEvents(Button))
                              analyticsContext={
                                Object {
                                  "componentName": "breadcrumbsItem",
                                  "packageName": "@atlaskit/breadcrumbs",
                                  "packageVersion": "999.9.9",
                                }
                              }
                              appearance="subtle-link"
                              href="/item"
                              onClick={[Function]}
                              spacing="none"
                              testId="breadcrumb-to-find"
                              theme={[Function]}
                            >
                              <AnalyticsContext
                                data={
                                  Object {
                                    "componentName": "breadcrumbsItem",
                                    "packageName": "@atlaskit/breadcrumbs",
                                    "packageVersion": "999.9.9",
                                  }
                                }
                              >
                                <WithAnalyticsEvents(Button)
                                  appearance="subtle-link"
                                  href="/item"
                                  onClick={[Function]}
                                  spacing="none"
                                  testId="breadcrumb-to-find"
                                  theme={[Function]}
                                >
                                  <AnalyticsContextConsumer
                                    createEventMap={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    wrappedComponentProps={
                                      Object {
                                        "appearance": "subtle-link",
                                        "children": "Another item",
                                        "component": undefined,
                                        "href": "/item",
                                        "iconAfter": undefined,
                                        "iconBefore": undefined,
                                        "onClick": [Function],
                                        "spacing": "none",
                                        "target": undefined,
                                        "testId": "breadcrumb-to-find",
                                        "theme": [Function],
                                      }
                                    }
                                  >
                                    <Button
                                      appearance="subtle-link"
                                      createAnalyticsEvent={[Function]}
                                      href="/item"
                                      onClick={[Function]}
                                      spacing="none"
                                      testId="breadcrumb-to-find"
                                      theme={[Function]}
                                    >
                                      <Button
                                        appearance="subtle-link"
                                        autoFocus={false}
                                        consumerRef={[Function]}
                                        createAnalyticsEvent={[Function]}
                                        href="/item"
                                        isDisabled={false}
                                        isLoading={false}
                                        isSelected={false}
                                        onClick={[Function]}
                                        shouldFitContainer={false}
                                        spacing="none"
                                        testId="breadcrumb-to-find"
                                        theme={[Function]}
                                        type="button"
                                      >
                                        <Provider
                                          value={[Function]}
                                        >
                                          <Consumer>
                                            <Consumer
                                              appearance="subtle-link"
                                              autoFocus={false}
                                              consumerRef={[Function]}
                                              createAnalyticsEvent={[Function]}
                                              href="/item"
                                              iconIsOnlyChild={false}
                                              isDisabled={false}
                                              isLoading={false}
                                              isSelected={false}
                                              mode="light"
                                              onClick={[Function]}
                                              shouldFitContainer={false}
                                              spacing="none"
                                              state="default"
                                              testId="breadcrumb-to-find"
                                              theme={[Function]}
                                              type="button"
                                            >
                                              <a
                                                autoFocus={false}
                                                className="emotion-2"
                                                data-testid="breadcrumb-to-find"
                                                disabled={false}
                                                href="/item"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                type="button"
                                              >
                                                <Component
                                                  fit={false}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    className="emotion-1"
                                                    onClick={[Function]}
                                                  >
                                                    <Component
                                                      followsIcon={false}
                                                      isLoading={false}
                                                      spacing="none"
                                                    >
                                                      <span
                                                        className="emotion-0"
                                                      >
                                                        Another item
                                                      </span>
                                                    </Component>
                                                  </span>
                                                </Component>
                                              </a>
                                            </Consumer>
                                          </Consumer>
                                        </Provider>
                                      </Button>
                                    </Button>
                                  </AnalyticsContextConsumer>
                                </WithAnalyticsEvents(Button)>
                              </AnalyticsContext>
                            </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                          </ForwardRef>
                          <Separator>
                            <div
                              className="c2"
                            >
                              /
                            </div>
                          </Separator>
                        </div>
                      </BreadcrumbsItemElement>
                    </BreadcrumbsItem>
                  </AnalyticsContextConsumer>
                </WithAnalyticsEvents(BreadcrumbsItem)>
                <WithAnalyticsEvents(BreadcrumbsItem)
                  hasSeparator={true}
                  href="/item"
                  key=".2"
                  text="A third item"
                >
                  <AnalyticsContextConsumer
                    createEventMap={
                      Object {
                        "onClick": [Function],
                      }
                    }
                    wrappedComponentProps={
                      Object {
                        "hasSeparator": true,
                        "href": "/item",
                        "text": "A third item",
                      }
                    }
                  >
                    <BreadcrumbsItem
                      createAnalyticsEvent={[Function]}
                      hasSeparator={true}
                      href="/item"
                      onClick={[Function]}
                      text="A third item"
                      truncationWidth={0}
                    >
                      <BreadcrumbsItemElement>
                        <div
                          className="c1"
                        >
                          <ForwardRef
                            analyticsContext={
                              Object {
                                "componentName": "breadcrumbsItem",
                                "packageName": "@atlaskit/breadcrumbs",
                                "packageVersion": "999.9.9",
                              }
                            }
                            appearance="subtle-link"
                            href="/item"
                            onClick={[Function]}
                            spacing="none"
                            truncationWidth={0}
                          >
                            <WithAnalyticsContext(WithAnalyticsEvents(Button))
                              analyticsContext={
                                Object {
                                  "componentName": "breadcrumbsItem",
                                  "packageName": "@atlaskit/breadcrumbs",
                                  "packageVersion": "999.9.9",
                                }
                              }
                              appearance="subtle-link"
                              href="/item"
                              onClick={[Function]}
                              spacing="none"
                              theme={[Function]}
                            >
                              <AnalyticsContext
                                data={
                                  Object {
                                    "componentName": "breadcrumbsItem",
                                    "packageName": "@atlaskit/breadcrumbs",
                                    "packageVersion": "999.9.9",
                                  }
                                }
                              >
                                <WithAnalyticsEvents(Button)
                                  appearance="subtle-link"
                                  href="/item"
                                  onClick={[Function]}
                                  spacing="none"
                                  theme={[Function]}
                                >
                                  <AnalyticsContextConsumer
                                    createEventMap={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    wrappedComponentProps={
                                      Object {
                                        "appearance": "subtle-link",
                                        "children": "A third item",
                                        "component": undefined,
                                        "href": "/item",
                                        "iconAfter": undefined,
                                        "iconBefore": undefined,
                                        "onClick": [Function],
                                        "spacing": "none",
                                        "target": undefined,
                                        "testId": undefined,
                                        "theme": [Function],
                                      }
                                    }
                                  >
                                    <Button
                                      appearance="subtle-link"
                                      createAnalyticsEvent={[Function]}
                                      href="/item"
                                      onClick={[Function]}
                                      spacing="none"
                                      theme={[Function]}
                                    >
                                      <Button
                                        appearance="subtle-link"
                                        autoFocus={false}
                                        consumerRef={[Function]}
                                        createAnalyticsEvent={[Function]}
                                        href="/item"
                                        isDisabled={false}
                                        isLoading={false}
                                        isSelected={false}
                                        onClick={[Function]}
                                        shouldFitContainer={false}
                                        spacing="none"
                                        theme={[Function]}
                                        type="button"
                                      >
                                        <Provider
                                          value={[Function]}
                                        >
                                          <Consumer>
                                            <Consumer
                                              appearance="subtle-link"
                                              autoFocus={false}
                                              consumerRef={[Function]}
                                              createAnalyticsEvent={[Function]}
                                              href="/item"
                                              iconIsOnlyChild={false}
                                              isDisabled={false}
                                              isLoading={false}
                                              isSelected={false}
                                              mode="light"
                                              onClick={[Function]}
                                              shouldFitContainer={false}
                                              spacing="none"
                                              state="default"
                                              theme={[Function]}
                                              type="button"
                                            >
                                              <a
                                                autoFocus={false}
                                                className="emotion-2"
                                                disabled={false}
                                                href="/item"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                type="button"
                                              >
                                                <Component
                                                  fit={false}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    className="emotion-1"
                                                    onClick={[Function]}
                                                  >
                                                    <Component
                                                      followsIcon={false}
                                                      isLoading={false}
                                                      spacing="none"
                                                    >
                                                      <span
                                                        className="emotion-0"
                                                      >
                                                        A third item
                                                      </span>
                                                    </Component>
                                                  </span>
                                                </Component>
                                              </a>
                                            </Consumer>
                                          </Consumer>
                                        </Provider>
                                      </Button>
                                    </Button>
                                  </AnalyticsContextConsumer>
                                </WithAnalyticsEvents(Button)>
                              </AnalyticsContext>
                            </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                          </ForwardRef>
                          <Separator>
                            <div
                              className="c2"
                            >
                              /
                            </div>
                          </Separator>
                        </div>
                      </BreadcrumbsItemElement>
                    </BreadcrumbsItem>
                  </AnalyticsContextConsumer>
                </WithAnalyticsEvents(BreadcrumbsItem)>
                <WithAnalyticsEvents(BreadcrumbsItem)
                  hasSeparator={true}
                  href="/item"
                  key=".3"
                  text="A fourth item with a very long name"
                >
                  <AnalyticsContextConsumer
                    createEventMap={
                      Object {
                        "onClick": [Function],
                      }
                    }
                    wrappedComponentProps={
                      Object {
                        "hasSeparator": true,
                        "href": "/item",
                        "text": "A fourth item with a very long name",
                      }
                    }
                  >
                    <BreadcrumbsItem
                      createAnalyticsEvent={[Function]}
                      hasSeparator={true}
                      href="/item"
                      onClick={[Function]}
                      text="A fourth item with a very long name"
                      truncationWidth={0}
                    >
                      <BreadcrumbsItemElement>
                        <div
                          className="c1"
                        >
                          <ForwardRef
                            analyticsContext={
                              Object {
                                "componentName": "breadcrumbsItem",
                                "packageName": "@atlaskit/breadcrumbs",
                                "packageVersion": "999.9.9",
                              }
                            }
                            appearance="subtle-link"
                            href="/item"
                            onClick={[Function]}
                            spacing="none"
                            truncationWidth={0}
                          >
                            <WithAnalyticsContext(WithAnalyticsEvents(Button))
                              analyticsContext={
                                Object {
                                  "componentName": "breadcrumbsItem",
                                  "packageName": "@atlaskit/breadcrumbs",
                                  "packageVersion": "999.9.9",
                                }
                              }
                              appearance="subtle-link"
                              href="/item"
                              onClick={[Function]}
                              spacing="none"
                              theme={[Function]}
                            >
                              <AnalyticsContext
                                data={
                                  Object {
                                    "componentName": "breadcrumbsItem",
                                    "packageName": "@atlaskit/breadcrumbs",
                                    "packageVersion": "999.9.9",
                                  }
                                }
                              >
                                <WithAnalyticsEvents(Button)
                                  appearance="subtle-link"
                                  href="/item"
                                  onClick={[Function]}
                                  spacing="none"
                                  theme={[Function]}
                                >
                                  <AnalyticsContextConsumer
                                    createEventMap={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    wrappedComponentProps={
                                      Object {
                                        "appearance": "subtle-link",
                                        "children": "A fourth item with a very long name",
                                        "component": undefined,
                                        "href": "/item",
                                        "iconAfter": undefined,
                                        "iconBefore": undefined,
                                        "onClick": [Function],
                                        "spacing": "none",
                                        "target": undefined,
                                        "testId": undefined,
                                        "theme": [Function],
                                      }
                                    }
                                  >
                                    <Button
                                      appearance="subtle-link"
                                      createAnalyticsEvent={[Function]}
                                      href="/item"
                                      onClick={[Function]}
                                      spacing="none"
                                      theme={[Function]}
                                    >
                                      <Button
                                        appearance="subtle-link"
                                        autoFocus={false}
                                        consumerRef={[Function]}
                                        createAnalyticsEvent={[Function]}
                                        href="/item"
                                        isDisabled={false}
                                        isLoading={false}
                                        isSelected={false}
                                        onClick={[Function]}
                                        shouldFitContainer={false}
                                        spacing="none"
                                        theme={[Function]}
                                        type="button"
                                      >
                                        <Provider
                                          value={[Function]}
                                        >
                                          <Consumer>
                                            <Consumer
                                              appearance="subtle-link"
                                              autoFocus={false}
                                              consumerRef={[Function]}
                                              createAnalyticsEvent={[Function]}
                                              href="/item"
                                              iconIsOnlyChild={false}
                                              isDisabled={false}
                                              isLoading={false}
                                              isSelected={false}
                                              mode="light"
                                              onClick={[Function]}
                                              shouldFitContainer={false}
                                              spacing="none"
                                              state="default"
                                              theme={[Function]}
                                              type="button"
                                            >
                                              <a
                                                autoFocus={false}
                                                className="emotion-2"
                                                disabled={false}
                                                href="/item"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                type="button"
                                              >
                                                <Component
                                                  fit={false}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    className="emotion-1"
                                                    onClick={[Function]}
                                                  >
                                                    <Component
                                                      followsIcon={false}
                                                      isLoading={false}
                                                      spacing="none"
                                                    >
                                                      <span
                                                        className="emotion-0"
                                                      >
                                                        A fourth item with a very long name
                                                      </span>
                                                    </Component>
                                                  </span>
                                                </Component>
                                              </a>
                                            </Consumer>
                                          </Consumer>
                                        </Provider>
                                      </Button>
                                    </Button>
                                  </AnalyticsContextConsumer>
                                </WithAnalyticsEvents(Button)>
                              </AnalyticsContext>
                            </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                          </ForwardRef>
                          <Separator>
                            <div
                              className="c2"
                            >
                              /
                            </div>
                          </Separator>
                        </div>
                      </BreadcrumbsItemElement>
                    </BreadcrumbsItem>
                  </AnalyticsContextConsumer>
                </WithAnalyticsEvents(BreadcrumbsItem)>
                <WithAnalyticsEvents(BreadcrumbsItem)
                  hasSeparator={true}
                  href="/item"
                  key=".4"
                  text="Item 5"
                >
                  <AnalyticsContextConsumer
                    createEventMap={
                      Object {
                        "onClick": [Function],
                      }
                    }
                    wrappedComponentProps={
                      Object {
                        "hasSeparator": true,
                        "href": "/item",
                        "text": "Item 5",
                      }
                    }
                  >
                    <BreadcrumbsItem
                      createAnalyticsEvent={[Function]}
                      hasSeparator={true}
                      href="/item"
                      onClick={[Function]}
                      text="Item 5"
                      truncationWidth={0}
                    >
                      <BreadcrumbsItemElement>
                        <div
                          className="c1"
                        >
                          <ForwardRef
                            analyticsContext={
                              Object {
                                "componentName": "breadcrumbsItem",
                                "packageName": "@atlaskit/breadcrumbs",
                                "packageVersion": "999.9.9",
                              }
                            }
                            appearance="subtle-link"
                            href="/item"
                            onClick={[Function]}
                            spacing="none"
                            truncationWidth={0}
                          >
                            <WithAnalyticsContext(WithAnalyticsEvents(Button))
                              analyticsContext={
                                Object {
                                  "componentName": "breadcrumbsItem",
                                  "packageName": "@atlaskit/breadcrumbs",
                                  "packageVersion": "999.9.9",
                                }
                              }
                              appearance="subtle-link"
                              href="/item"
                              onClick={[Function]}
                              spacing="none"
                              theme={[Function]}
                            >
                              <AnalyticsContext
                                data={
                                  Object {
                                    "componentName": "breadcrumbsItem",
                                    "packageName": "@atlaskit/breadcrumbs",
                                    "packageVersion": "999.9.9",
                                  }
                                }
                              >
                                <WithAnalyticsEvents(Button)
                                  appearance="subtle-link"
                                  href="/item"
                                  onClick={[Function]}
                                  spacing="none"
                                  theme={[Function]}
                                >
                                  <AnalyticsContextConsumer
                                    createEventMap={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    wrappedComponentProps={
                                      Object {
                                        "appearance": "subtle-link",
                                        "children": "Item 5",
                                        "component": undefined,
                                        "href": "/item",
                                        "iconAfter": undefined,
                                        "iconBefore": undefined,
                                        "onClick": [Function],
                                        "spacing": "none",
                                        "target": undefined,
                                        "testId": undefined,
                                        "theme": [Function],
                                      }
                                    }
                                  >
                                    <Button
                                      appearance="subtle-link"
                                      createAnalyticsEvent={[Function]}
                                      href="/item"
                                      onClick={[Function]}
                                      spacing="none"
                                      theme={[Function]}
                                    >
                                      <Button
                                        appearance="subtle-link"
                                        autoFocus={false}
                                        consumerRef={[Function]}
                                        createAnalyticsEvent={[Function]}
                                        href="/item"
                                        isDisabled={false}
                                        isLoading={false}
                                        isSelected={false}
                                        onClick={[Function]}
                                        shouldFitContainer={false}
                                        spacing="none"
                                        theme={[Function]}
                                        type="button"
                                      >
                                        <Provider
                                          value={[Function]}
                                        >
                                          <Consumer>
                                            <Consumer
                                              appearance="subtle-link"
                                              autoFocus={false}
                                              consumerRef={[Function]}
                                              createAnalyticsEvent={[Function]}
                                              href="/item"
                                              iconIsOnlyChild={false}
                                              isDisabled={false}
                                              isLoading={false}
                                              isSelected={false}
                                              mode="light"
                                              onClick={[Function]}
                                              shouldFitContainer={false}
                                              spacing="none"
                                              state="default"
                                              theme={[Function]}
                                              type="button"
                                            >
                                              <a
                                                autoFocus={false}
                                                className="emotion-2"
                                                disabled={false}
                                                href="/item"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                type="button"
                                              >
                                                <Component
                                                  fit={false}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    className="emotion-1"
                                                    onClick={[Function]}
                                                  >
                                                    <Component
                                                      followsIcon={false}
                                                      isLoading={false}
                                                      spacing="none"
                                                    >
                                                      <span
                                                        className="emotion-0"
                                                      >
                                                        Item 5
                                                      </span>
                                                    </Component>
                                                  </span>
                                                </Component>
                                              </a>
                                            </Consumer>
                                          </Consumer>
                                        </Provider>
                                      </Button>
                                    </Button>
                                  </AnalyticsContextConsumer>
                                </WithAnalyticsEvents(Button)>
                              </AnalyticsContext>
                            </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                          </ForwardRef>
                          <Separator>
                            <div
                              className="c2"
                            >
                              /
                            </div>
                          </Separator>
                        </div>
                      </BreadcrumbsItemElement>
                    </BreadcrumbsItem>
                  </AnalyticsContextConsumer>
                </WithAnalyticsEvents(BreadcrumbsItem)>
                <WithAnalyticsEvents(BreadcrumbsItem)
                  hasSeparator={false}
                  href="/item"
                  key=".5"
                  testId="last-breadcrumb"
                  text="A sixth item"
                >
                  <AnalyticsContextConsumer
                    createEventMap={
                      Object {
                        "onClick": [Function],
                      }
                    }
                    wrappedComponentProps={
                      Object {
                        "hasSeparator": false,
                        "href": "/item",
                        "testId": "last-breadcrumb",
                        "text": "A sixth item",
                      }
                    }
                  >
                    <BreadcrumbsItem
                      createAnalyticsEvent={[Function]}
                      hasSeparator={false}
                      href="/item"
                      onClick={[Function]}
                      testId="last-breadcrumb"
                      text="A sixth item"
                      truncationWidth={0}
                    >
                      <BreadcrumbsItemElement>
                        <div
                          className="c1"
                        >
                          <ForwardRef
                            analyticsContext={
                              Object {
                                "componentName": "breadcrumbsItem",
                                "packageName": "@atlaskit/breadcrumbs",
                                "packageVersion": "999.9.9",
                              }
                            }
                            appearance="subtle-link"
                            href="/item"
                            onClick={[Function]}
                            spacing="none"
                            testId="last-breadcrumb"
                            truncationWidth={0}
                          >
                            <WithAnalyticsContext(WithAnalyticsEvents(Button))
                              analyticsContext={
                                Object {
                                  "componentName": "breadcrumbsItem",
                                  "packageName": "@atlaskit/breadcrumbs",
                                  "packageVersion": "999.9.9",
                                }
                              }
                              appearance="subtle-link"
                              href="/item"
                              onClick={[Function]}
                              spacing="none"
                              testId="last-breadcrumb"
                              theme={[Function]}
                            >
                              <AnalyticsContext
                                data={
                                  Object {
                                    "componentName": "breadcrumbsItem",
                                    "packageName": "@atlaskit/breadcrumbs",
                                    "packageVersion": "999.9.9",
                                  }
                                }
                              >
                                <WithAnalyticsEvents(Button)
                                  appearance="subtle-link"
                                  href="/item"
                                  onClick={[Function]}
                                  spacing="none"
                                  testId="last-breadcrumb"
                                  theme={[Function]}
                                >
                                  <AnalyticsContextConsumer
                                    createEventMap={
                                      Object {
                                        "onClick": [Function],
                                      }
                                    }
                                    wrappedComponentProps={
                                      Object {
                                        "appearance": "subtle-link",
                                        "children": "A sixth item",
                                        "component": undefined,
                                        "href": "/item",
                                        "iconAfter": undefined,
                                        "iconBefore": undefined,
                                        "onClick": [Function],
                                        "spacing": "none",
                                        "target": undefined,
                                        "testId": "last-breadcrumb",
                                        "theme": [Function],
                                      }
                                    }
                                  >
                                    <Button
                                      appearance="subtle-link"
                                      createAnalyticsEvent={[Function]}
                                      href="/item"
                                      onClick={[Function]}
                                      spacing="none"
                                      testId="last-breadcrumb"
                                      theme={[Function]}
                                    >
                                      <Button
                                        appearance="subtle-link"
                                        autoFocus={false}
                                        consumerRef={[Function]}
                                        createAnalyticsEvent={[Function]}
                                        href="/item"
                                        isDisabled={false}
                                        isLoading={false}
                                        isSelected={false}
                                        onClick={[Function]}
                                        shouldFitContainer={false}
                                        spacing="none"
                                        testId="last-breadcrumb"
                                        theme={[Function]}
                                        type="button"
                                      >
                                        <Provider
                                          value={[Function]}
                                        >
                                          <Consumer>
                                            <Consumer
                                              appearance="subtle-link"
                                              autoFocus={false}
                                              consumerRef={[Function]}
                                              createAnalyticsEvent={[Function]}
                                              href="/item"
                                              iconIsOnlyChild={false}
                                              isDisabled={false}
                                              isLoading={false}
                                              isSelected={false}
                                              mode="light"
                                              onClick={[Function]}
                                              shouldFitContainer={false}
                                              spacing="none"
                                              state="default"
                                              testId="last-breadcrumb"
                                              theme={[Function]}
                                              type="button"
                                            >
                                              <a
                                                autoFocus={false}
                                                className="emotion-2"
                                                data-testid="last-breadcrumb"
                                                disabled={false}
                                                href="/item"
                                                onBlur={[Function]}
                                                onClick={[Function]}
                                                onFocus={[Function]}
                                                onMouseDown={[Function]}
                                                onMouseEnter={[Function]}
                                                onMouseLeave={[Function]}
                                                onMouseUp={[Function]}
                                                type="button"
                                              >
                                                <Component
                                                  fit={false}
                                                  onClick={[Function]}
                                                >
                                                  <span
                                                    className="emotion-1"
                                                    onClick={[Function]}
                                                  >
                                                    <Component
                                                      followsIcon={false}
                                                      isLoading={false}
                                                      spacing="none"
                                                    >
                                                      <span
                                                        className="emotion-0"
                                                      >
                                                        A sixth item
                                                      </span>
                                                    </Component>
                                                  </span>
                                                </Component>
                                              </a>
                                            </Consumer>
                                          </Consumer>
                                        </Provider>
                                      </Button>
                                    </Button>
                                  </AnalyticsContextConsumer>
                                </WithAnalyticsEvents(Button)>
                              </AnalyticsContext>
                            </WithAnalyticsContext(WithAnalyticsEvents(Button))>
                          </ForwardRef>
                        </div>
                      </BreadcrumbsItemElement>
                    </BreadcrumbsItem>
                  </AnalyticsContextConsumer>
                </WithAnalyticsEvents(BreadcrumbsItem)>
              </div>
            </BreadcrumbsContainer>
          </BreadcrumbsStateless>
        </AnalyticsContextConsumer>
      </WithAnalyticsEvents(BreadcrumbsStateless)>
    </AnalyticsContext>
  </WithAnalyticsContext(WithAnalyticsEvents(BreadcrumbsStateless))>
</Breadcrumbs>
`;
